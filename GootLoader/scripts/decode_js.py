import sys
import os
import re

if len(sys.argv) != 2:
    exit("Argument invalid")

filename = sys.argv[1]

with open(filename,errors='ignore', encoding='unicode_escape') as reader:
    content=reader.read()

    if "jQuery JavaScript Library v1.11.3" not in content:
        exit("Can't read this JavaScript file")

    obfuscated_code= max(content.split("\n"), key=len)

if len(obfuscated_code) < 1000:
    exit("Error parsing the file")

start_to_end=obfuscated_code[0:obfuscated_code.rfind("=")]
order=start_to_end[start_to_end.rfind("=")+1::].strip().split(";")[0].split("+")
start_to_end=start_to_end[0:start_to_end.rfind("=")]
start_to_end=start_to_end[0:start_to_end.rfind(";")]
start_to_end=start_to_end[start_to_end.find(";")+1:]

m = re.findall('\w{2,14}=\'',start_to_end)
m=list(map(lambda x: x.strip('=')[:-2],m))
final_payload={}
for i in range(len(m)):
    if i<len(m)-1:
        final_payload[m[i]]=start_to_end.split(m[i]+"=")[1].split(m[i+1])[0]
    else:
       final_payload[m[i]]=start_to_end.split(m[i]+"=")[1]

final_payload_ordered=""
for items in order:
    final_payload_ordered+=final_payload[items][1:-2]


if len(final_payload_ordered) < 1000 or len(m) <5:
    exit("Error parsing the payload")

# Function 'month' in JavaScript
def substr(string,start,end=None):
    if end is None:
        try:
            return string[start:]
        except: return ""
    else:
        end=start+end
        return string[start:end]

# Function 'stick' in JavaScript
def even(n0,n1,n2):
    if n0 is None: n0=""
    if n1 is None: n1=""

    if (n2 % 2) ==0:
        return n0+n1
    else:
        return n1+n0

# Function 'operate' in Javascript
def operate(n0,n1):
    return substr(n0,n1,1)

# Function 'hour' in Javascript
def shuffle(n0):
    counter=1;
    decoded_string=""
    while counter < 2946:
        temp=operate(n0,counter)
        decoded_string= even(decoded_string,temp,counter)
        counter=counter+1
    print(decoded_string)

shuffle(final_payload_ordered)
