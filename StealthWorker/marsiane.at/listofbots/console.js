var ws, term;
function getConsole(ip){
    if (ws != null) {
        ws.close();
        ws = null;
    }
    if(term != null) {
        term.dispose();
        term = null;
    }

    $('#term').text('');
    $('#terminalDiv').show();
    dragElement(document.getElementById("terminalDivHeader"));

    term = new Terminal({
        screenKeys: true,
        useStyle: true,
        cursorBlink: true,
    });
    window.term = term;
    term.open(document.getElementById('term'));
    //term.fit();
    //console.log(term);

    term.writeln('\x1b[38;5;38mSTEALTH\x1B[38;5;222m TERMINAL!\x1B[0m');
    term.writeln('Waiting connection...');
    term.writeln('');
    //term.fit();

    var shellprompt = '';

    term.prompt = function () {
        //term.write(shellprompt);
    };

    term.on('key', function (key, ev) {
        //console.log(key);
        if (ev.keyCode === 13) {
            //term.prompt();
            ws.send("\n");
        }else {
            ws.send(key);
        }
        var printable = (
            !ev.altKey && !ev.altGraphKey && !ev.ctrlKey && !ev.metaKey
        );

        if (ev.keyCode === 13) {
            //term.prompt();
            //ws.send("\n");
        } else if (ev.keyCode === 8) {
            // Do not delete the prompt
            if (term.x > 2) {
                term.write('\b \b');
            }
        } else if (printable) {
            //term.write(key);
        }
    });

    term.on('data', function (data, ev) {
        //shellprompt = shellprompt+data;
        //console.log(data);
    });

    term.on('paste', function (data, ev) {
        //term.write(data);
        ws.send(data);
    });


    if (window.WebSocket === undefined) {
        alert("Your browser does not support WebSockets");
        return;
    } else {
        ws = initWS();
    }

}

function initWS() {
    var WebsocketRandRoute = $('#WebsocketRandRoute').attr('content');

    var socket = new WebSocket("ws://localhost:9090/shell/"+WebsocketRandRoute),
        wsOpened = wsOpened
    socket.onopen = function() {
        wsOpened = true;
    };
    socket.onmessage = function (e) {
        var data = e.data;
        // var clientDataArr  = data.split(";$");
        // var client = clientDataArr[0];
        // var mess = clientDataArr[1];

        //console.log(data);

        term.write(data);

        //term.write('\033[F\033[F\033[s');
        //term.cursorUp(2);
        // if (clientGlob === ""){
        //     clientGlob = client;
        // }
        //
        // if (clientGlob !== client){
        //     return
        // }
    };
    
    socket.onclose = function () {
        wsOpened = false;
        term.write("Session terminated");
        //term.destroy();

    };
    

    return socket;
}

$(document).ready(function () {
    $('#closeConsoleModal').click(function () {
        $('#terminalDiv').hide();
        ws.close();
        term.dispose();
        $('#term').text('');
    });

    // $('#closeConsoleModal').click(function () {
    //     $('#consoleFrame').attr('src', '');
    // });
});

function dragElement(elmnt) {
    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
    if (document.getElementById(elmnt.id)) {
        // if present, the header is where you move the DIV from:
        document.getElementById(elmnt.id).onmousedown = dragMouseDown;
    } else {
        // otherwise, move the DIV from anywhere inside the DIV:
        elmnt.onmousedown = dragMouseDown;
    }

    function dragMouseDown(e) {
        e = e || window.event;
        e.preventDefault();
        // get the mouse cursor position at startup:
        pos3 = e.clientX;
        pos4 = e.clientY;
        document.onmouseup = closeDragElement;
        // call a function whenever the cursor moves:
        document.onmousemove = elementDrag;
    }

    function elementDrag(e) {
        elmnt = document.getElementById("terminalDiv");
        //console.log($('.notification-row').offset());
        e = e || window.event;
        e.preventDefault();
        // calculate the new cursor position:
        pos1 = pos3 - e.clientX;
        pos2 = pos4 - e.clientY;
        pos3 = e.clientX;
        pos4 = e.clientY;

        // set the element's new position:
        if((elmnt.offsetTop - pos2) > 55) {
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
        }

        if((elmnt.offsetLeft - pos1) >= 0) {
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        }
    }

    function closeDragElement() {
        // stop moving when mouse button is released:
        document.onmouseup = null;
        document.onmousemove = null;
    }
}