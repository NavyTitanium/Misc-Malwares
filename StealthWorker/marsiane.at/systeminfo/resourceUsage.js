$(document).ready(function(){
    GetResourceUsage();

    setInterval(function() {
        GetResourceUsage();
    }, 30 * 1000);

});

function GetResourceUsage(){
    $.ajax({
        url: "/ajax/resourceUsage",
        type: "GET",
        contentType: false,
        cache: false,
        processData: false,
        success: function (data) {
            //console.log(data);
            var arr = JSON.parse(data);
            var htmlCpuUsage = '<div class="container">\n' +
                '    <div class="row">\n' +
                '        <div>\n';
                //<div class="cpu">CPU#0:</div>

            var cpuFontColor = 'green';
            for (i in arr.CpuUsage){
                if (arr.CpuUsage[i] >= 30){
                    cpuFontColor = 'yellow';
                }else if(arr.CpuUsage[i] >= 80){
                    cpuFontColor = 'red';
                }
                htmlCpuUsage += '<div class="cpu">CPU#'+i+':&nbsp;<span style="color:'+cpuFontColor+'"><b>'+arr.CpuUsage[i]+'%</b></span></div>';
                //htmlCpuUsage += '<div class="cpu">CPU#:&nbsp;<span style="color:'+cpuFontColor+'"><b>'+arr.CpuUsage[i]+'%</b></span></div>';
            } 
                htmlCpuUsage +='</div>\n' +
                '    </div>\n' +
                '</div>';
            $('#resourceUsage').html('');
            $('#resourceUsage').append(htmlCpuUsage);

            var htmlMemory = '<div class="container">\n' +
                '    <div class="row">\n' +
                '        <div>\n'+
                '<div class="mem">RAM total:&nbsp;'+readableBytes(arr.TotalMemory*1024)+'</div>'+
                '<div class="mem">RAM used:&nbsp;'+readableBytes(arr.UsedMemory*1024)+'</div>'+
                '<div class="mem">RAM free:&nbsp;'+readableBytes(arr.FreeMemory*1024)+'</div>'
            ;

            $('#resourceUsage').append(htmlMemory);
        }
    });
}

function readableBytes(bytes) {
    var i = Math.floor(Math.log(bytes) / Math.log(1024)),
        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

    return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + sizes[i];
}
